nameOverride: ""
fullnameOverride: ""

image:
  repository: gitlab/gitlab-ee
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 18.5.1-ee.0

podAnnotations: {}

gitlab:
  config: |
    external_url 'https://gitlab.example.com'
    pages_external_url "https://gitlab-pages.example.com"
    nginx['enable'] = false
    gitlab_workhorse['listen_network'] = "tcp"
    gitlab_workhorse['listen_addr'] = "0.0.0.0:8181"
    gitlab_pages['external_http'] = ['0.0.0.0:8282']
    pages_nginx['enable'] = false
    gitlab_pages['namespace_in_path'] = true
    gitlab_rails['gitlab_shell_ssh_port'] = 22
    gitlab_rails['trusted_proxies'] = ['0.0.0.0/0']
    gitlab_rails['time_zone'] = 'Europe/Moscow'
    gitlab_rails['smtp_enable'] = true
    gitlab_rails['smtp_address'] = "mail.example.com"
    gitlab_rails['smtp_port'] = 465
    gitlab_rails['smtp_user_name'] = "robot@example.com"
    gitlab_rails['smtp_password'] = "XXXXXXXXXXXXXXXXXXXXXX"
    gitlab_rails['smtp_domain'] = "example.com"
    gitlab_rails['smtp_authentication'] = "login"
    gitlab_rails['smtp_tls'] = true
    gitlab_rails['registry_enabled'] = true
    gitlab_rails['registry_host'] = "registry.example.com"
    gitlab_rails['registry_path'] = "/var/opt/gitlab/registry"
    gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
    gitlab_rails['omniauth_sync_email_from_provider'] = 'openid_connect'
    gitlab_rails['omniauth_sync_profile_from_provider'] = ['openid_connect']
    gitlab_rails['omniauth_sync_profile_attributes'] = ['email']
    #gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'openid_connect'
    gitlab_rails['omniauth_block_auto_created_users'] = false
    gitlab_rails['omniauth_auto_link_user'] = ['openid_connect']
    gitlab_rails['omniauth_providers'] = [
      {
        name: 'openid_connect',
        label: 'Login via OpenID',
        args: {
          name: 'openid_connect',
          scope: ['openid','profile','email'],
          response_type: 'code',
          issuer: 'https://auth.example.com/application/o/gitlab/',
          discovery: true,
          client_auth_method: 'query',
          uid_field: 'preferred_username',
          send_scope_to_token_endpoint: 'true',
          pkce: true,
          client_options: {
            identifier: 'gitlab',
            secret: 'XXXXXXX',
            redirect_uri: 'https://gitlab.example.com/users/auth/openid_connect/callback'
          }
        }
      }
    ]
    postgresql['shared_buffers'] = "1024MB"
    sidekiq['concurrency'] = 8
    puma['worker_processes'] = 8
    web_server['external_users'] = ['www-data']
    letsencrypt['enable'] = false
    node_exporter['enable'] = false
    redis_exporter['enable'] = false
    postgres_exporter['enable'] = false
    pgbouncer_exporter['enable'] = false
    prometheus_monitoring['enable'] = false
    prometheus['enable'] = false
    registry['enable'] = true
    registry_nginx['enable'] = false
    registry_external_url 'https://registry.example.com'
    registry['registry_http_addr'] = "0.0.0.0:5000"

ports:
  http: 8181
  pages: 8282
  registry: 5000
  ssh: 22

registryHostPort: false
sshHostPort: false

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "512m"
  hosts:
    - host: gitlab.example.com
      paths:
        - path: /
          pathType: Prefix
          servicePort: http
    - host: gitlab-pages.example.com
      paths:
        - path: /
          pathType: Prefix
          servicePort: pages
  tls: []
  #  - secretName: gitlab-tls
  #    hosts:
  #      - gitlab.example.com

resources:
  requests:
    memory: "4Gi"
    cpu: "2000m"
  limits:
    memory: "8Gi"
    cpu: "4000m"

persistence:
  config:
    enabled: true
    size: 1Gi
    storageClassName: ""
    accessMode: ReadWriteOnce
  logs:
    enabled: true
    size: 5Gi
    storageClassName: ""
    accessMode: ReadWriteOnce
  data:
    enabled: true
    size: 50Gi
    storageClassName: ""
    accessMode: ReadWriteOnce
